# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := amqpcpp-test
DEFS_Debug := \
	'-DWIN32' \
	'-D_SCL_SECURE_NO_WARNINGS' \
	'-D_CRT_SECURE_NO_DEPRECATE' \
	'-D_CRT_NONSTDC_NO_DEPRECATE' \
	'-D_WIN32_WINNT=0x0501' \
	'-DDEBUG' \
	'-D_DEBUG'

# Flags passed to all source files.
CFLAGS_Debug := \
	-g \
	-O0 \
	-fno-stack-protector \
	-std=c11

# Flags passed to only C files.
CFLAGS_C_Debug :=

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-g \
	-O0 \
	-fno-stack-protector \
	-std=c++11

INCS_Debug := \
	-I..

DEFS_Release := \
	'-DWIN32' \
	'-D_SCL_SECURE_NO_WARNINGS' \
	'-D_CRT_SECURE_NO_DEPRECATE' \
	'-D_CRT_NONSTDC_NO_DEPRECATE' \
	'-D_WIN32_WINNT=0x0501' \
	'-DNDEBUG'

# Flags passed to all source files.
CFLAGS_Release := \
	-g \
	-O2 \
	-fno-stack-protector \
	-std=c11

# Flags passed to only C files.
CFLAGS_C_Release :=

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-g \
	-O2 \
	-fno-stack-protector \
	-std=c++11

INCS_Release := \
	-I..

OBJS := \
	$(obj).target/$(TARGET)/..\integrations\boost\test\main.o \
	$(obj).target/$(TARGET)/..\integrations\boost\test\myconnection.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# Make sure our dependencies are built before any of us.
$(OBJS): | $(obj).target\..\libamqpcpp.a

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug :=

LDFLAGS_Release :=

LIBS :=

$(builddir)\amqpcpp-test: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(builddir)\amqpcpp-test: LIBS := $(LIBS)
$(builddir)\amqpcpp-test: LD_INPUTS := $(OBJS) $(obj).target\..\libamqpcpp.a
$(builddir)\amqpcpp-test: TOOLSET := $(TOOLSET)
$(builddir)\amqpcpp-test: $(OBJS) $(obj).target\..\libamqpcpp.a FORCE_DO_CMD
	$(call do_cmd,link)

all_deps += $(builddir)\amqpcpp-test
# Add target alias
.PHONY: amqpcpp-test
amqpcpp-test: $(builddir)/amqpcpp-test

# Copy this to the executable output path.
$(builddir)/amqpcpp-test: TOOLSET := $(TOOLSET)
$(builddir)/amqpcpp-test: $(builddir)\amqpcpp-test FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += $(builddir)/amqpcpp-test
# Add executable to "all" target.
.PHONY: all
all: $(builddir)/amqpcpp-test

