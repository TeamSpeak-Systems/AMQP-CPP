# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := amqpcpp
DEFS_Debug := \
	'-DWIN32' \
	'-D_SCL_SECURE_NO_WARNINGS' \
	'-D_CRT_SECURE_NO_DEPRECATE' \
	'-D_CRT_NONSTDC_NO_DEPRECATE' \
	'-DDEBUG' \
	'-D_DEBUG'

# Flags passed to all source files.
CFLAGS_Debug := \
	-g \
	-O0 \
	-fno-stack-protector \
	-std=c11

# Flags passed to only C files.
CFLAGS_C_Debug :=

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-g \
	-O0 \
	-fno-stack-protector \
	-std=c++11

INCS_Debug := \
	-I..

DEFS_Release := \
	'-DWIN32' \
	'-D_SCL_SECURE_NO_WARNINGS' \
	'-D_CRT_SECURE_NO_DEPRECATE' \
	'-D_CRT_NONSTDC_NO_DEPRECATE' \
	'-DNDEBUG'

# Flags passed to all source files.
CFLAGS_Release := \
	-g \
	-O2 \
	-fno-stack-protector \
	-std=c11

# Flags passed to only C files.
CFLAGS_C_Release :=

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-g \
	-O2 \
	-fno-stack-protector \
	-std=c++11

INCS_Release := \
	-I..

OBJS := \
	$(obj).target/$(TARGET)/..\src\array.o \
	$(obj).target/$(TARGET)/..\src\channelimpl.o \
	$(obj).target/$(TARGET)/..\src\connectionimpl.o \
	$(obj).target/$(TARGET)/..\src\field.o \
	$(obj).target/$(TARGET)/..\src\flags.o \
	$(obj).target/$(TARGET)/..\src\receivedframe.o \
	$(obj).target/$(TARGET)/..\src\table.o \
	$(obj).target/$(TARGET)/..\src\watchable.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug :=

LDFLAGS_Release :=

LIBS :=

$(obj).target\..\libamqpcpp.a: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(obj).target\..\libamqpcpp.a: LIBS := $(LIBS)
$(obj).target\..\libamqpcpp.a: TOOLSET := $(TOOLSET)
$(obj).target\..\libamqpcpp.a: $(OBJS) FORCE_DO_CMD
	$(call do_cmd,alink)

all_deps += $(obj).target\..\libamqpcpp.a
# Add target alias
.PHONY: amqpcpp
amqpcpp: $(obj).target\..\libamqpcpp.a

# Add target alias to "all" target.
.PHONY: all
all: amqpcpp

